# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Distribute

on:
  push:
    branches: [ main ]
    
jobs:
  # Build ios app ipa.
  build_ios:
    runs-on: macos-latest
    timeout-minutes: 30

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Set up flutter
        uses: subosito/flutter-action@v1
        with:
          channel: 'stable'

      - name: Set up GoogleService-info.plist
        run: |
          cd ios/Runner
          echo "${{ secrets.GOOGLE_SERVICE_INFO_PLIST_BASE64 }}" > GoogleService-Info.plist.txt
          base64 --decode GoogleService-Info.plist.txt > GoogleService-Info.plist
          cd ../../

      - name: Set up provisioning profile
        run: |
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          echo "${{ secrets.IOS_PROVISIONING_PROFILE_BASE64 }}" > release.mobileprovision.txt
          base64 --decode release.mobileprovision.txt > ~/Library/MobileDevice/Provisioning\ Profiles/YRZY_SHIORI_Release.mobileprovision

      - name: Set up release certificate
        uses: Apple-Actions/import-codesign-certs@v1
        with:
          p12-file-base64: ${{ secrets.IOS_CERTIFICATE_BASE64 }}
          p12-password: ${{ secrets.IOS_CERTIFICATE_PASSWORD }}

      - name: Install dependency packages
        run: flutter pub get

      - name: Build ipa file
        run: flutter build ipa --release --export-options-plist=ios/ExportOptions.plist --build-number ${GITHUB_RUN_NUMBER}

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ios
          path: build/ios/ipa/SHIORI.ipa
  
  # Build android app.
  build_android:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Set up JDK 8.x
        uses: actions/setup-java@v1
        with:
          java-version: '8.x'
      
      - name: Set up flutter
        uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
      
      - name: Set up google-service.json
        run: |
          cd android/app
          echo "${{ secrets.GOOGLE_SERVICES_JSON_BASE64 }}" > google-services.json.txt
          base64 --decode google-services.json.txt > google-services.json
          cd ../../
      
      - name: Install flutter dependency packages
        run: flutter pub get

  # Distribute app with Firebase Distribution.
  distribute:
    runs-on: ubuntu-latest
    needs: [ build_android, build_ios ]
    timeout-minutes: 20

    steps:
      - name: Download iOS artifact
        uses: actions/download-artifact@v2
        with:
          name: ios

      - name: Upload ipa to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.FIREBASE_IOS_APP_ID }}
          token: ${{ secrets.FIREBASE_TOKEN }}
          groups: shiori_develop
          file: SHIORI.ipa

      - name: Remove all artifacts
        uses: c-hive/gha-remove-artifacts@v1
        with:
          age: '0 days'

  # Teardown on success
  teardown_on_success:
    if: ${{ success() }}
    runs-on: ubuntu-latest
    needs: [ distribute ]
    timeout-minutes: 10

    steps:
      - name: Notify result to Slack
        run: echo "SUCCESS"

  # Teardown on failure
  teardown_on_failure:
    if: ${{ failure() }}
    runs-on: ubuntu-latest
    needs: [ distribute ]
    timeout-minutes: 10

    steps:
      - name: Notify result to Slack
        run: echo "FAILED"